@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --sticky-nav-height: 0px;
  }

  body {
    @apply bg-charcoal-900 text-aluminum-100 antialiased;
    background-attachment: fixed;
    scroll-padding-top: var(--sticky-nav-height, 0px);
  }

  a {
    @apply text-ember-300 underline-offset-4 transition-colors duration-150 ease-in-out;
  }

  a:hover,
  a:focus-visible {
    @apply text-ember-200 underline;
  }
}

@layer components {
  .surface-panel {
    @apply rounded-2xl border border-aluminum-500/20 bg-graphite-700/80 shadow-glow backdrop-blur;
    position: relative;
    isolation: isolate;
    overflow: hidden;
    z-index: 0;
    transition: border-color 0.3s ease, box-shadow 0.3s ease, background-color 0.3s ease;
    --spotlight-opacity: 0;
    --spotlight-x: 50%;
    --spotlight-y: 50%;
  }

  .surface-panel:focus-visible {
    outline: none;
  }

  .surface-panel:is(:hover, :focus-visible, :focus-within) {
    @apply border-ember-300/50;
  }

  .surface-panel:is(:hover, :focus-visible, :focus-within)
    :is(.text-aluminum-300, .text-aluminum-400) {
    color: theme('colors.aluminum.100');
  }

  .surface-panel::after {
    content: '';
    position: absolute;
    inset: -1px;
    border-radius: inherit;
    pointer-events: none;
    z-index: 0;
    opacity: var(--spotlight-opacity);
    transition: opacity 0.35s ease;
    background: radial-gradient(
      circle at var(--spotlight-x) var(--spotlight-y),
      rgba(255, 176, 122, 0.22) 0%,
      rgba(255, 176, 122, 0.08) 35%,
      rgba(255, 176, 122, 0) 70%
    );
    mix-blend-mode: screen;
  }

  .surface-panel > :where(*) {
    position: relative;
    z-index: 1;
  }

  .surface-ring {
    @apply border border-aluminum-500/25 bg-graphite-700/60 backdrop-blur;
  }
}

@layer utilities {
  .texture-noise {
    @apply bg-anodised-aluminum;
    background-blend-mode: soft-light;
  }

  .nav-scroll-anchor {
    scroll-margin-top: var(--sticky-nav-height, 0px);
  }

  .flex.min-h-screen.flex-col.justify-center {
    --nav-center-offset: calc(var(--sticky-nav-height, 0px) / 2);
  }

  .flex.min-h-screen.flex-col.justify-center > * {
    position: relative;
    top: calc(var(--nav-center-offset, 0px) * -1);
  }
}

@layer components {
  .project-sections {
    @apply flex flex-col;
  }
}
